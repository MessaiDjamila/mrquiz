import 'package:flutter/material.dart';
import 'package:mr_quiz/prof.dart';
import 'DB_helper.dart';
import 'package:mr_quiz/profilprof.dart';
class Affichageprofil extends StatefulWidget {
  const Affichageprofil({Key? key}) : super(key: key);

  @override
  _AffichageprofilState createState() => _AffichageprofilState();
}

class _AffichageprofilState extends State<Affichageprofil> {
  getprof()async{
    final prof =await DB_helper.instance.getProf();
    return prof;
  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
          backgroundColor: Colors.white,
          resizeToAvoidBottomInset: false,
          appBar: AppBar(
            backgroundColor: Colors.white,
            title: Text('Profil', style: TextStyle(
                color: Colors.black, fontWeight: FontWeight.bold),),
            centerTitle: true,
            elevation: 0.0,
          ),
          body:FutureBuilder(
            future: getprof(),
            builder:(context , AsyncSnapshot<dynamic> snapshot )  {
              switch(snapshot.connectionState){
                case ConnectionState.waiting :{
                  return Center(child:CircularProgressIndicator());
                }
                case ConnectionState.done: {
                  if(snapshot.data! == null){
                    return Center(child:Text('vous n avez pas entrez des informations'));
                  } else {
                    return Padding(
                        padding: const EdgeInsets.all(8),
                            child: ListView.builder(

                              itemCount: (snapshot.data ! as List).length ,
                            itemBuilder: (context,index){
                              String prof_id=(snapshot.data as Map<String, dynamic>)['prof_id'];
                              String nom=(snapshot.data as Map<String, dynamic>)['nom'];
                              String email=(snapshot.data as Map<String, dynamic>)['email'];
                              String description=(snapshot.data as Map<String, dynamic>)['description'];
                              return Card(
                                margin: EdgeInsets.all(8),
                                elevation: 8,
                                child: Row(
                                  children: [

                                    Padding(
                                      padding: EdgeInsets.all(8),
                                      child: Column(
                                        crossAxisAlignment: CrossAxisAlignment.start,
                                        children: [
                                          Container(
                                            padding: const EdgeInsets.only(bottom: 8),
                                            child: Text(nom,
                                                style:
                                                TextStyle(fontWeight: FontWeight.bold, fontSize: 20)),
                                          ),
                                          Text(email,
                                              style: TextStyle(color: Colors.grey[500], fontSize: 16))
                                        ],
                                      ),
                                    )
                                  ],
                                ),
                              );

                            },

                            ),
                    );
                  }

                }
              }
              return SizedBox();
            }
            )
    );
  }
}

